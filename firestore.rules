service cloud.firestore {
  match /databases/{database}/documents {

    match /users/{userId} {
       allow read;
       allow create: if isAuthenticated();
       allow update: if isDocumentOwner(userId) && !('isAdmin' in request.resource.data)
       allow delete: if isAdmin();
    }

    match /reviews/{document=**} {
       allow read;
       allow create: if isAuthenticated();
       allow update: if isDocumentOwner(resource.data.reviewerId);
       allow delete: if isAdmin();
    }

    match /portfolio/{userId}/work/{w} {
       allow read;
       allow create: if isAuthenticated();
       allow update: if isDocumentOwner(userId);
       allow delete: if isDocumentOwner(userId);
    }

    match /users/{userId}/certifications/{certificationId} {
       allow read;
       allow create: if isAuthenticated();
       allow update: if isDocumentOwner(userId);
       allow delete: if isDocumentOwner(userId);
    }

    match /transactions/{transactionId} {
       allow read;
       allow create: if isAuthenticated();
       allow update: if userIsSender();
       allow delete: if isAdmin();
    }

    match /who/{userId}/user/{who} {
       allow read;
       allow create: if isAuthenticated();
       allow update: if isAuthenticated();
       allow delete: if isAdmin();
    }

    match /viewed-users/{userId}/viewed/{document=**} {
       allow read;
       allow create: if isDocumentOwner(userId);
       allow update: if isDocumentOwner(userId);
       allow delete: if isAdmin();
    }

    match /notifications/{userId} {
       allow read;
       allow create: if isAuthenticated();
       allow update: if isAuthenticated();
       allow delete: if isAuthenticated();
    }


    match /skill-tags/{skill} {
       allow read;
    }

    match /chats/{document=**} {
       allow read;
       allow create: if isAuthenticated();
       allow update: if isAuthenticated();
       allow delete: if isAdmin();
    }

    match /features/{document=**} {
       allow read;
    }

    match /dock-auth/{docId} {
      allow read;
    }
    
    match /limepay-payments/{jobId} {
       allow read;
       allow create: if isAuthenticated();
       allow update: if userIsClientOrProvider();
       allow delete: if isAdmin();
    }


    // TODO: Will require a much more complex rule set here
    match /jobs {
       allow read:if request.auth != null;
    }

    match /jobs/{jobId} {
       allow read;
       allow create: if isAuthenticated();
       allow update: if userIsClientOrProvider();
       allow delete: if isAdmin();
    }


    match /public-jobs/{jobId} {
       allow read;
       allow create: if isAuthenticated();
       allow update: if userIsClientOrProvider();
       allow delete: if isAdmin();
    }

    match /public-jobs/{jobId}/bids/{bidId} {
       allow read;
       allow create: if userIsClientOrProvider();
       allow update: if isAuthenticated();
       allow delete: if isAdmin();
    }

    match /public-jobs/{jobId}/invites/{inviteId} {
       allow read;
       allow create: if isAuthenticated();
       allow update: if isAuthenticated();
       allow delete: if isAdmin();
    }

    match /shoppers/{userId} {
       allow read;
       allow create: if isDocumentOwner(userId);
       allow update: if isDocumentOwner(userId);
       allow delete: if isAdmin();
    }
  }

  // --------------------------------------------------------------------------------
  function isAuthenticated() {
    return request.auth != null
  }

  function isDocumentOwner(userId) {
    return request.auth.uid == userId
    || isAdmin()
  }

  function userIsSender() {
    return request.resource.data.senderId == request.auth.uid
    || isAdmin()
  }

  function userIsClientOrProvider() {
    return request.resource.data.clientId == request.auth.uid
    || request.resource.data.providerId == request.auth.uid
    || isAdmin()
  }

  function getUserData() {
    return get(/databases/$(database)/documents/users/$(request.auth.uid)).data
  }

  function isAdmin() {
    return getUserData().isAdmin
  }
 // --------------------------------------------------------------------------------
}